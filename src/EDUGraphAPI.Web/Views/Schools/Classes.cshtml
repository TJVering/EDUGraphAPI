@using Microsoft.Education.Data
@model SectionsViewModel
@{
    ViewBag.Title = "CLASSES";
    var isMySections = (bool?)ViewBag.IsMySections == true;
}
<div class="row schools sections">
    <div class="tophero">
        <div class="col-md-8">
            <div class="secondnav">
                <a href="/schools"> All Schools</a> > @Model.School.Name
            </div>
            <div class="a-heading">
                Classes
            </div>
        </div>
        <div class="toptiles">
            <div class="section-school-name">
                @Model.School.Name
            </div>
            <div class="infocontainer">
                <div class="infoheader">
                    PRINCIPAL
                </div>
                <div class="infobody" title="@Model.School.PrincipalName">
                    @Html.Raw(string.IsNullOrEmpty(Model.School.PrincipalName) ? "-" : Model.School.PrincipalName)
                </div>
            </div>
            <div class="infocontainer">
                <div class="infoheader">
                    Grade level
                </div>
                <div class="infobody" title="@Model.School.LowestGrade - @Model.School.HighestGrade">
                    @Model.School.LowestGrade - @Model.School.HighestGrade
                </div>
            </div>
        </div>
        <div>
            <div class="col-md-6 usericon">
                <div class="icon"></div><div>Non-Class</div>
                <div class="icon my-class"></div><div>My Class</div>
            </div>
            <div class="col-md-6 mysection section-link-container">
                VIEW:
                @Html.ActionLink("My Classes", "MyClasses", null, new { schoolId = Model.School.ObjectId }, new { @class = isMySections ? "current" : "" }) |
                @Html.ActionLink("All Classes", "Classes", null, new { schoolId = Model.School.ObjectId }, new { @class = isMySections ? "" : "current" })
            </div>
        </div>
        <br style="clear:both;" />
    </div>
    <div class="section-tiles">
        @if (Model.Sections == null || Model.Sections.Count == 0)
        {
            <div class="nodata"> There is no data available for this page at this time.</div>
        }
        @foreach (var s in Model.Sections)
        {
            <div class="tile-container">
                @if (Model.IsMy(s))
                {
                    <a class="mysectionlink" href="@Url.Action("ClassDetails", new { schoolId = Model.School.ObjectId, sectionId = s.ObjectId })">
                        @Tile(s)
                    </a>
                }
                else
                {
                    @Tile(s)
                }
                <div class="detail">
                    <h5>Course Id:</h5>
                    <h6>@s.CourseId</h6>
                    <h5>Description:</h5>
                    <h6>@s.CourseDescription</h6>
                    <h5>Teachers:</h5>
                    @foreach (var teacher in s.Teachers)
                    {
                        <h6>@teacher.DisplayName</h6>
                    }
                    <h5>Term Name:</h5>
                    <h6>
                        @s.TermName
                    </h6>
                    <h5>Start/Finish Date:</h5>

                    <h6>
                        @Convert.ToDateTime(s.TermStartDate).ToString("MMMM y")
                        -
                        @Convert.ToDateTime(s.TermEndDate).ToString("MMMM y")
                    </h6>
                    <h5>Period:</h5>
                    <h6>@s.Period</h6>
                </div>
            </div>
        }
    </div>
    <div class="pagination" id="pagination"></div>
</div>
@helper Tile(Section section)
{
    <div class="tile">
        <h5>Intro to @(section.DisplayName.CropWholeWords(30))</h5>
        <h2>@(section.CombinedCourseNumber)</h2>
    </div>
}
@Scripts.Render("~/bundles/section")
